import json
from urllib.request import urlopen
from urllib.error import HTTPError


def scrape_vulnerability(cve):
    # cve = "CVE-2025-34567"
    nvd_data = request_nvd(cve)
    if nvd_data is None:
        return {"cve": cve, "cvss": -1, "description": "N/A", "references": ["N/A"]}

    cvss = scrape_cvss(nvd_data)
    description = scrape_description(nvd_data)
    references = scrape_references(nvd_data)

    return {"cve": cve, "cvss": cvss, "description": description, "references": references}


def request_nvd(cve):
    nvd_base_url = "https://services.nvd.nist.gov/rest/json/cves/2.0?cveId="
    request_url = nvd_base_url + cve
    print("REQUEST NVD URL: " + request_url)

    try:
        with urlopen(request_url) as response:
            status_code = response.status
            data = response.read().decode('utf-8')
            data = json.loads(data)

        if status_code == 200:
            if data['totalResults'] == 0:
                return None
            return data
        else:
            return None
    except HTTPError as e:
        print(f"Error fetching data: {e}")
        return None


def scrape_cvss(data):
    cvss = data['vulnerabilities'][0]['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseScore']
    return cvss


def scrape_description(data):
    description = data['vulnerabilities'][0]['cve']['descriptions'][0]['value']
    return description


def scrape_references(data):
    json_references = str(data['vulnerabilities'][0]['cve']['references'])
    json_references = json_references.replace("\'", "\"")
    all_ref = json.loads(json_references)
    references = [entry['url'] for entry in all_ref]
    return references
